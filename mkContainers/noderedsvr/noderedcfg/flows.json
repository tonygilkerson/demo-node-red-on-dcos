[{"id":"eaa9409e.ffdbc","type":"tab","label":"Initiators"},{"id":"9d03a6f0.941a98","type":"tab","label":"Router"},{"id":"441ab614.a9c4d8","type":"tab","label":"Acct1 Flow"},{"id":"78c4304b.eef76","type":"tab","label":"Item Processing Service"},{"id":"e556e45b.648c58","type":"tab","label":"Supplier Processing"},{"id":"1a870f79.ae0e91","type":"amqp-server","z":"","host":"p1.dcos","port":"10003","vhost":"demo-vhost","keepalive":"30","usetls":false,"verifyservercert":true,"usetopology":false,"topology":"{\n\t\"exchanges\": [\n\t\t{\"name\": \"exchange1\", \"type\": \"direct\", \"options\": {\"durable\": false}},\n\t\t{\"name\": \"exchange2\"}\n\t],\n\t\"queues\": [\n\t\t{\"name\": \"queue1\", \"options\": {\"messageTtl\": 60000}},\n\t\t{\"name\": \"queue2\"}\n\t],\n\t\"bindings\": [\n\t\t{\"source\": \"exchange1\", \"queue\": \"queue1\", \"pattern\": \"debug\", \"args\": {}},\n\t\t{\"source\": \"exchange1\", \"exchange\": \"exchange2\", \"pattern\": \"error\"},\n\t\t{\"source\": \"exchange2\", \"queue\": \"queue2\"}\n\t]\n}"},{"id":"63a82227.b4e53c","type":"amqp in","z":"9d03a6f0.941a98","name":"router","topic":"","iotype":"4","ioname":"routerq","server":"1a870f79.ae0e91","x":81.5,"y":273.8500061035156,"wires":[["fade2e40.6215"]]},{"id":"fade2e40.6215","type":"switch","z":"9d03a6f0.941a98","name":"Select Account","property":"payload.accountId","propertyType":"msg","rules":[{"t":"eq","v":"acct1","vt":"str"},{"t":"eq","v":"acct2","vt":"str"},{"t":"eq","v":"acct3","vt":"str"},{"t":"eq","v":"acct4","vt":"str"}],"checkall":"true","outputs":4,"x":269.5,"y":334.8500061035156,"wires":[["8ad21a8d.24eee8"],["497fd6c5.22b2d8"],["19f50073.3bada"],["5667e75b.525808"]]},{"id":"8d145815.d123b8","type":"amqp out","z":"eaa9409e.ffdbc","name":"router","routingkey":"","iotype":"4","ioname":"routerq","server":"1a870f79.ae0e91","x":401,"y":202,"wires":[]},{"id":"86dec216.9a52b","type":"inject","z":"eaa9409e.ffdbc","name":"ERP push items faker","topic":"","payload":"{   \"accountId\": \"acct1\",   \"locationId\": \"loc1\",   \"deviceId\": \"dev1\",   \"destination\": \"NETSUITE\",   \"documentType\": \"ITEMS\",   \"documentName\": \"items123.dat\",   \"eventId\": \"eventId-GUID\",   \"eventDateTime\": \"20170205T23:25:32.000+0000\",   \"eventType\": \"ERP\",   \"flowContext\": {     \"testProdFlag\": \"TEST\",     \"altBillingAccount\": \"acct999\"   },   \"payloadAttachments\": [     {       \"fileName\": \"items123.dat\",       \"fileStorageId\": \"items123-storage-GUID\",       \"charEncoding\": \"UTF-8\"     }   ] }","payloadType":"json","repeat":"","crontab":"","once":false,"x":160,"y":140,"wires":[["8d145815.d123b8"]]},{"id":"db480050.aa86","type":"comment","z":"eaa9409e.ffdbc","name":"ReadMe","info":"# Initiators \n\nData from an external system is received by and endpoint and sent to the router \nwhere a bespoke flow is performed.  \n\n## Flow Initiation Message Construction \nOnce data is recieved from the endpoint the connector must construct a *Flow Initiation Message* \nand then that message to the router exchange to initiate the flow\n\nHere is the fake order message we will use to start the flow\n\n```\n{\n  \"accountId\": \"acct1\",\n  \"locationId\": \"loc1\",\n  \"deviceId\": \"dev1\",\n  \"destination\": \"NETSUITE\",\n  \"documentType\": \"ITEMS\",\n  \"documentName\": \"items123.dat\",\n  \"eventId\": \"eventId-GUID\",\n  \"eventDateTime\": \"20170205T23:25:32.000+0000\",\n  \"eventType\": \"ERP\",\n  \"flowContext\": {\n    \"testProdFlag\": \"TEST\",\n    \"altBillingAccount\": \"acct999\"\n  },\n  \"payloadAttachments\": [\n    {\n      \"fileName\": \"items123.dat\",\n      \"fileStorageId\": \"items123-storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    }\n  ]\n}\n```\n\nHere is the schemp for an initial flow message\n\n```\n{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Flow Initiation\",\n  \"description\": \"The first message in a flow\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"accountId\": {\n      \"description\": \"A unique Id for the organization that owns this message.\",\n      \"type\": \"string\"\n    },\n    \"locationId\": {\n      \"description\": \"A unique Id for the device location.\",\n      \"type\": \"string\"\n    },\n    \"deviceId\": {\n      \"description\": \"A unique Id for the device.\",\n      \"type\": \"string\"\n    },    \n    \"destination\": {\n      \"description\": \"The destinaton such as SHOPIFY, EBAY, AMAZON, etc...\",\n      \"type\": \"string\"\n    },\n    \"documentType\": {\n      \"description\": \"The payload type i.e. ORDERS, ITEMS, SALES, etc..\",\n      \"type\": \"string\"\n    },\n    \"documentName\": {\n      \"description\": \"A name for the payload type such as an Order Number, a File Name, a Batch ID etc.\",\n      \"type\": \"string\"\n    },    \n    \"eventId\": {\n      \"description\": \"A globally unique ID for this event.  This will be used for tracking\",\n      \"type\": \"string\"\n    },\n    \"eventDateTime\": {\n      \"description\": \"The date and time on which this event occurred.\",\n      \"type\": \"string\"\n    },\n    \"eventType\": {\n      \"description\": \"The type of event such as ERP, ORDER_PROCESSING, ITEM_PROCESSING, SUPPLIER_PROCESSING etc.. \",\n      \"type\": \"string\"\n    },\n    \"flowContext\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\",\n        \"description\": \"string values\"\n      }\n    },\n    \"payloadAttachments\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"The file name\",\n            \"required\": true\n          },\n          \"fileStorageId\": {\n            \"type\": \"string\",\n            \"description\": \"A unique storage id used to retrieve the file if needed\",\n            \"required\": true\n          },\n          \"charEncoding\": {\n            \"type\": \"string\",\n            \"description\": \"A unique storage id used to retrieve the file if needed\",\n            \"required\": true\n          },\n          \"mimeType\": {\n            \"type\": \"string\",\n            \"description\": \"A unique storage id used to retrieve the file if needed\",\n            \"required\": false\n          }\n        },\n        \"description\": \"the value\",\n        \"required\": true\n      }\n    }\n  },\n  \"required\": [\n    \"accountId\",\n    \"locationId\",\n    \"deviceId\",\n    \"eventId\",\n    \"eventDateTime\",\n    \"eventType\"\n  ]\n}\n```\n","x":114,"y":83,"wires":[]},{"id":"8ad21a8d.24eee8","type":"link out","z":"9d03a6f0.941a98","name":"acct1","links":["9f4f622e.d9b8c"],"x":465,"y":216,"wires":[]},{"id":"497fd6c5.22b2d8","type":"link out","z":"9d03a6f0.941a98","name":"acct2","links":[],"x":464,"y":287,"wires":[]},{"id":"19f50073.3bada","type":"link out","z":"9d03a6f0.941a98","name":"acct3","links":[],"x":468,"y":367,"wires":[]},{"id":"9f4f622e.d9b8c","type":"link in","z":"441ab614.a9c4d8","name":"","links":["8ad21a8d.24eee8"],"x":144,"y":350,"wires":[["92892aaa.4793b8"]]},{"id":"92892aaa.4793b8","type":"switch","z":"441ab614.a9c4d8","name":"Event Type?","property":"payload.eventType","propertyType":"msg","rules":[{"t":"eq","v":"ERP","vt":"str"},{"t":"eq","v":"ITEM_PROCESSING","vt":"str"},{"t":"eq","v":"SUPPLIER_PROCESSING","vt":"str"},{"t":"eq","v":"ORDER_PROCESSING","vt":"str"}],"checkall":"true","outputs":4,"x":279,"y":389,"wires":[["44bb499d.553db8"],["c63b4762.ec1eb8"],["8ccd9a1e.201c58"],[]]},{"id":"f1f3628a.3082f","type":"comment","z":"9d03a6f0.941a98","name":"System Flow","info":"","x":264,"y":108,"wires":[]},{"id":"36c0051b.6115fa","type":"comment","z":"9d03a6f0.941a98","name":"Subscriber Flows","info":"","x":636,"y":104,"wires":[]},{"id":"5667e75b.525808","type":"link out","z":"9d03a6f0.941a98","name":"acct4","links":[],"x":470,"y":444,"wires":[]},{"id":"e9d1c458.df43f8","type":"amqp out","z":"441ab614.a9c4d8","name":"","routingkey":"","iotype":"4","ioname":"itemQ","server":"1a870f79.ae0e91","x":740,"y":99,"wires":[]},{"id":"44bb499d.553db8","type":"switch","z":"441ab614.a9c4d8","name":"ERP - documentType","property":"payload.documentType","propertyType":"msg","rules":[{"t":"eq","v":"ITEMS","vt":"str"}],"checkall":"true","outputs":1,"x":540,"y":212,"wires":[["e9d1c458.df43f8"]]},{"id":"e60c135a.7f67a","type":"amqp in","z":"78c4304b.eef76","name":"","topic":"","iotype":"4","ioname":"item!","server":"1a870f79.ae0e91","x":109,"y":113,"wires":[["4d705e0a.094a8"]]},{"id":"36d80c68.babcb4","type":"amqp out","z":"78c4304b.eef76","name":"router","routingkey":"","iotype":"4","ioname":"routerq","server":"1a870f79.ae0e91","x":514,"y":116,"wires":[]},{"id":"4d705e0a.094a8","type":"function","z":"78c4304b.eef76","name":"Item Processing","func":"// 1) Read the items and insert into nChannel proper\n// 2) Generate a file of suppliers found while processing items\n//    add the supplier file to storage and update command message with require referneces\nmsg.payload.flowContext.supplierListAttachmentFileName = \"suppliers123.dat\";\nmsg.payload.flowContext.supplierListAttachmentFileId = \"suppliers-storage-GUID\";\nmsg.payload.payloadAttachments.push({\"fileName\": \"suppliers123.dat\",\"fileStorageId\": \"suppliers-storage-GUID\", \"charEncoding\": \"UTF-8\"});\n\n// 3) Generate uniue eventId and populate date/time for downstream tracking\nmsg.payload.eventid = \"eventId-GUID\";\nmsg.payload.eventDateTime = \"20170205T23:25:32.000+0000\";\n\n// 4) Set the event type so the router can figure out what to do next\nmsg.payload.eventType = \"ITEM_PROCESSING\";\n\nreturn msg;","outputs":1,"noerr":0,"x":306,"y":190,"wires":[["36d80c68.babcb4"]]},{"id":"8d217754.7841c8","type":"comment","z":"78c4304b.eef76","name":"Item Processing","info":"This is a fake item processing service. It is hardcoded to mimic the following:\n* act as if reads the items from storage using the info in payloadAttachments\n* create a supplier file for supplier found on the items and adds it to the payloadAttachments \n\nThe supplier list is potentially acted upon downstream depending on the customer\nspecific routing rules.\n\nTherefore the payloadAttachments will look like this after the item processor runs:\n\n\"payloadAttachments\": [\n    {\n      \"fileName\": \"items123.dat\",\n      \"fileStorageId\": \"item-storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    },\n    {\n      \"fileName\": \"suppliers123.dat\",\n      \"fileStorageId\": \"supplier-storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    }\n    \n  ]","x":139,"y":53,"wires":[]},{"id":"c63b4762.ec1eb8","type":"switch","z":"441ab614.a9c4d8","name":"Item - supplierList?","property":"payload.flowContext.supplierListAttachmentFileName","propertyType":"msg","rules":[{"t":"nnull"},{"t":"else"}],"checkall":"true","outputs":2,"x":531,"y":339,"wires":[["83068bfa.fcb728","cdf058c7.aa1ca8"],["cdf058c7.aa1ca8"]]},{"id":"83068bfa.fcb728","type":"amqp out","z":"441ab614.a9c4d8","name":"","routingkey":"","iotype":"4","ioname":"supplierQ","server":"1a870f79.ae0e91","x":725,"y":273,"wires":[]},{"id":"cdf058c7.aa1ca8","type":"switch","z":"441ab614.a9c4d8","name":"dest?","property":"payload.destination","propertyType":"msg","rules":[{"t":"eq","v":"SHOPIFY","vt":"str"},{"t":"eq","v":"AMAZON","vt":"str"},{"t":"eq","v":"EBAY","vt":"str"}],"checkall":"true","outputs":3,"x":846,"y":395,"wires":[["25540df0.fcc422"],["ae5fbfa8.2b1fe"],["1403b920.b943b7"]]},{"id":"25540df0.fcc422","type":"amqp out","z":"441ab614.a9c4d8","name":"","routingkey":"","iotype":"4","ioname":"shopifyQ","server":"1a870f79.ae0e91","x":1000,"y":319,"wires":[]},{"id":"ae5fbfa8.2b1fe","type":"amqp out","z":"441ab614.a9c4d8","name":"","routingkey":"","iotype":"4","ioname":"amazonQ","server":"1a870f79.ae0e91","x":1002,"y":393,"wires":[]},{"id":"1403b920.b943b7","type":"amqp out","z":"441ab614.a9c4d8","name":"","routingkey":"","iotype":"4","ioname":"ebayQ","server":"1a870f79.ae0e91","x":1008,"y":466,"wires":[]},{"id":"f9115ce4.6bf9","type":"comment","z":"441ab614.a9c4d8","name":"connectors","info":"","x":997,"y":274,"wires":[]},{"id":"2d0dd6ca.da577a","type":"amqp in","z":"e556e45b.648c58","name":"","topic":"","iotype":"4","ioname":"item!","server":"1a870f79.ae0e91","x":78,"y":108,"wires":[["fbed6364.3f0fc"]]},{"id":"c1bec655.d64908","type":"amqp out","z":"e556e45b.648c58","name":"router","routingkey":"","iotype":"4","ioname":"routerq","server":"1a870f79.ae0e91","x":483,"y":111,"wires":[]},{"id":"fbed6364.3f0fc","type":"function","z":"e556e45b.648c58","name":"Item Processing","func":"// 1) Read the suppliers and insert into nChannel proper\n\n// 2) Generate uniue eventId and populate date/time for downstream tracking\nmsg.payload.eventid = \"eventId-GUID\";\nmsg.payload.eventDateTime = \"20170205T23:25:32.000+0000\";\n\n// 4) Set the event type so the router can figure out what to do next\nmsg.payload.eventType = \"SUPPLIER_PROCESSING\";\n\nreturn msg;","outputs":1,"noerr":0,"x":275,"y":185,"wires":[["c1bec655.d64908"]]},{"id":"3e8813d.80205ec","type":"comment","z":"e556e45b.648c58","name":"Supplier Processing","info":"This is a fake supplier processing service. It is hardcoded to mimic the following:\n* act as if reads the suppliers from storage using the info in payloadAttachments\n* insert the suppliers into nChannel proper\n\n","x":118,"y":48,"wires":[]},{"id":"8ccd9a1e.201c58","type":"function","z":"441ab614.a9c4d8","name":"Flow Stop - Supplier Processing","func":"// todo\n// populate tracking using the event information\nreturn msg;","outputs":1,"noerr":0,"x":558,"y":445,"wires":[[]]}]
