[
  {
    "id": "87b0ac16.d1ff1",
    "type": "tab",
    "label": "ERP Connector"
  },
  {
    "id": "706c7407.8c38fc",
    "type": "tab",
    "label": "Channel Transaction"
  },
  {
    "id": "e556e45b.648c58",
    "type": "tab",
    "label": "Order Processing Service"
  },
  {
    "id": "3987579f.511488",
    "type": "tab",
    "label": "Acct1 Flow"
  },
  {
    "id": "1a870f79.ae0e91",
    "type": "amqp-server",
    "z": "",
    "host": "p1.dcos",
    "port": "10003",
    "vhost": "demo-vhost",
    "keepalive": "30",
    "usetls": false,
    "verifyservercert": true,
    "usetopology": false,
    "topology": "{\n\t\"exchanges\": [\n\t\t{\"name\": \"exchange1\", \"type\": \"direct\", \"options\": {\"durable\": false}},\n\t\t{\"name\": \"exchange2\"}\n\t],\n\t\"queues\": [\n\t\t{\"name\": \"queue1\", \"options\": {\"messageTtl\": 60000}},\n\t\t{\"name\": \"queue2\"}\n\t],\n\t\"bindings\": [\n\t\t{\"source\": \"exchange1\", \"queue\": \"queue1\", \"pattern\": \"debug\", \"args\": {}},\n\t\t{\"source\": \"exchange1\", \"exchange\": \"exchange2\", \"pattern\": \"error\"},\n\t\t{\"source\": \"exchange2\", \"queue\": \"queue2\"}\n\t]\n}"
  },
  {
    "id": "53dd188f.96eeb8",
    "type": "amqp in",
    "z": "706c7407.8c38fc",
    "name": "router",
    "topic": "",
    "iotype": "4",
    "ioname": "routerq",
    "server": "1a870f79.ae0e91",
    "x": 81.5,
    "y": 273.8500061035156,
    "wires": [
      [
        "61115e74.cc0f9"
      ]
    ]
  },
  {
    "id": "61115e74.cc0f9",
    "type": "switch",
    "z": "706c7407.8c38fc",
    "name": "Select Account",
    "property": "payload.accountId",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "acct1",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "acct2",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "acct3",
        "vt": "str"
      }
    ],
    "checkall": "true",
    "outputs": 3,
    "x": 269.5,
    "y": 334.8500061035156,
    "wires": [
      [
        "65684dc.b5395b4"
      ],
      [
        "5c5c9275.c9926c"
      ],
      [
        "1d3c5773.fd8d19"
      ]
    ]
  },
  {
    "id": "d8ce9a9a.f5bea8",
    "type": "amqp out",
    "z": "87b0ac16.d1ff1",
    "name": "router",
    "routingkey": "",
    "iotype": "4",
    "ioname": "routerq",
    "server": "1a870f79.ae0e91",
    "x": 310,
    "y": 160,
    "wires": []
  },
  {
    "id": "46fc59cc.3ca068",
    "type": "inject",
    "z": "87b0ac16.d1ff1",
    "name": "ERP Faker",
    "topic": "",
    "payload": "{   \"accountId\": \"acct1\",   \"locationId\": \"loc1\",   \"deviceId\": \"dev1\",   \"destination\": \"SHOPIFY\",   \"documentType\": \"ORDER\",   \"documentName\": \"fileName123.dat\",   \"eventId\": \"eventId-GUID\",   \"eventDateTime\": \"20170205T23:25:32.000+0000\",   \"eventType\": \"ERP\",   \"flowContext\": {     \"testProdFlag\": \"TEST\",     \"altBillingAccount\": \"acct999\"   },   \"payloadAttachments\": [     {       \"fileName\": \"fileName123.dat\",       \"fileStorageId\": \"storage-GUID\",       \"charEncoding\": \"UTF-8\"     }   ] }",
    "payloadType": "json",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 120,
    "y": 140,
    "wires": [
      [
        "d8ce9a9a.f5bea8"
      ]
    ]
  },
  {
    "id": "9fc8639a.81ad8",
    "type": "comment",
    "z": "87b0ac16.d1ff1",
    "name": "ERP Connector",
    "info": "# ERP Connector\n\nThe ERP Connector is a flow initiator. Data from an external system is received by the service \nand sent to the router where a bespoke flow is performed. The ERP Connector encapsulates the interaction of an ERP system with the router. \n\n## Flow Initiation Message Construction \nOnce data is recieved by the ERP Connector it must construct a *Flow Initiation Message* and then\nsend the message to the router exchange to initiate the flow\n\nHere is the fake order message we will use to start the flow\n\n```\n{\n  \"accountId\": \"acct1\",\n  \"locationId\": \"loc1\",\n  \"deviceId\": \"dev1\",\n  \"destination\": \"SHOPIFY\",\n  \"documentType\": \"ORDER\",\n  \"documentName\": \"fileName123.dat\",\n  \"eventId\": \"eventId-GUID\",\n  \"eventDateTime\": \"20170205T23:25:32.000+0000\",\n  \"eventType\": \"ERP\",\n  \"flowContext\": {\n    \"testProdFlag\": \"TEST\",\n    \"altBillingAccount\": \"acct999\"\n  },\n  \"payloadAttachments\": [\n    {\n      \"fileName\": \"fileName123.dat\",\n      \"fileStorageId\": \"storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    }\n  ]\n}\n```\n\nHere is the schemp for an initial flow message\n\n```\n{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Flow Initiation\",\n  \"description\": \"The first message in a flow\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"accountId\": {\n      \"description\": \"A unique Id for the organization that owns this message.\",\n      \"type\": \"string\"\n    },\n    \"locationId\": {\n      \"description\": \"A unique Id for the device location.\",\n      \"type\": \"string\"\n    },\n    \"deviceId\": {\n      \"description\": \"A unique Id for the device.\",\n      \"type\": \"string\"\n    },    \n    \"destination\": {\n      \"description\": \"The destinaton such as SHOPIFY, EBAY, AMAZON, etc...\",\n      \"type\": \"string\"\n    },\n    \"documentType\": {\n      \"description\": \"The payload type i.e. 850, ORDER, or it could be more generic such as FILE or BATCH\",\n      \"type\": \"string\"\n    },\n    \"documentName\": {\n      \"description\": \"A name for the payload type such as an Order Number, a File Name, a Batch ID etc.\",\n      \"type\": \"string\"\n    },    \n    \"eventId\": {\n      \"description\": \"A globally unique ID for this event.  This will be used for tracking\",\n      \"type\": \"string\"\n    },\n    \"eventDateTime\": {\n      \"description\": \"The date and time on which this event occurred.\",\n      \"type\": \"string\"\n    },\n    \"eventType\": {\n      \"description\": \"The type of event such as ERP, ORDER_PROCESSION, ITEM_PROCESSING, CUSTOMER_PROCESSING, etc.. \",\n      \"type\": \"string\"\n    },\n    \"flowContext\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"type\": \"string\",\n        \"description\": \"string values\"\n      }\n    },\n    \"payloadAttachments\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fileName\": {\n            \"type\": \"string\",\n            \"description\": \"The file name\",\n            \"required\": true\n          },\n          \"fileStorageId\": {\n            \"type\": \"string\",\n            \"description\": \"A unique storage id used to retrieve the file if needed\",\n            \"required\": true\n          },\n          \"charEncoding\": {\n            \"type\": \"string\",\n            \"description\": \"A unique storage id used to retrieve the file if needed\",\n            \"required\": true\n          },\n          \"mimeType\": {\n            \"type\": \"string\",\n            \"description\": \"A unique storage id used to retrieve the file if needed\",\n            \"required\": false\n          }\n        },\n        \"description\": \"the value\",\n        \"required\": true\n      }\n    }\n  },\n  \"required\": [\n    \"accountId\",\n    \"locationId\",\n    \"deviceId\",\n    \"eventId\",\n    \"eventDateTime\",\n    \"eventType\"\n  ]\n}\n```\n\n\n",
    "x": 134,
    "y": 83,
    "wires": []
  },
  {
    "id": "897c4b1e.329d08",
    "type": "amqp in",
    "z": "e556e45b.648c58",
    "name": "orderProcessingQ",
    "topic": "",
    "iotype": "4",
    "ioname": "s1q",
    "server": "1a870f79.ae0e91",
    "x": 130,
    "y": 100,
    "wires": [
      [
        "4fba985a.c76148"
      ]
    ]
  },
  {
    "id": "a370167f.d6d508",
    "type": "amqp out",
    "z": "e556e45b.648c58",
    "name": "router",
    "routingkey": "",
    "iotype": "4",
    "ioname": "routerq",
    "server": "1a870f79.ae0e91",
    "x": 556,
    "y": 99,
    "wires": []
  },
  {
    "id": "4fba985a.c76148",
    "type": "function",
    "z": "e556e45b.648c58",
    "name": "Order Processing",
    "func": "msg.payload.flowContext.itemListAttachmentName = \"item-list123.dat\";\nmsg.payload.flowContext.itemListAttachmentName = \"customer-list123.dat\";\nmsg.payload.eventType = \"ORDER_PROCESSING\";\n//todo - populate event date/time and guid\nmsg.payload.payloadAttachments.push({\"fileName\": \"item-list123.dat\",\"fileStorageId\": \"storage-GUID\", \"charEncoding\": \"UTF-8\"});\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 349,
    "y": 168,
    "wires": [
      [
        "a370167f.d6d508"
      ]
    ]
  },
  {
    "id": "2242f712.704b18",
    "type": "comment",
    "z": "e556e45b.648c58",
    "name": "Order Processing",
    "info": "This is a fake order processing service. It is hardcoded to mimic the following:\n* act as if reads the order from storage using the info in payloadAttachments\n* create an item-list document for items found in the order and adds it to the payloadAttachments \n* create a customer-list document for customers found in the order and adds it to the payloadAttachments \n\nThe item-list and customer-list are potentially acted upon downstream depending on the customer\nspecific routing rules.\n\nTherefore the payloadAttachments will look like this after the order processor runs:\n\n\"payloadAttachments\": [\n    {\n      \"fileName\": \"fileName123.dat\",\n      \"fileStorageId\": \"storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    },\n    {\n      \"fileName\": \"item-list123.dat\",\n      \"fileStorageId\": \"storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    },\n    {\n      \"fileName\": \"customer-list123.dat\",\n      \"fileStorageId\": \"storage-GUID\",\n      \"charEncoding\": \"UTF-8\"\n    }\n    \n  ]",
    "x": 130,
    "y": 40,
    "wires": []
  },
  {
    "id": "65684dc.b5395b4",
    "type": "link out",
    "z": "706c7407.8c38fc",
    "name": "acct1",
    "links": [
      "7fcb8687.ec8ba8"
    ],
    "x": 433,
    "y": 194,
    "wires": []
  },
  {
    "id": "5c5c9275.c9926c",
    "type": "link out",
    "z": "706c7407.8c38fc",
    "name": "acct2",
    "links": [],
    "x": 433,
    "y": 334,
    "wires": []
  },
  {
    "id": "1d3c5773.fd8d19",
    "type": "link out",
    "z": "706c7407.8c38fc",
    "name": "acct3",
    "links": [],
    "x": 438,
    "y": 479,
    "wires": []
  },
  {
    "id": "7fcb8687.ec8ba8",
    "type": "link in",
    "z": "3987579f.511488",
    "name": "",
    "links": [
      "65684dc.b5395b4"
    ],
    "x": 206,
    "y": 33,
    "wires": [
      [
        "1d0ece00.b5d422"
      ]
    ]
  },
  {
    "id": "386bb497.28993c",
    "type": "debug",
    "z": "3987579f.511488",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "false",
    "x": 550,
    "y": 211,
    "wires": []
  },
  {
    "id": "1d0ece00.b5d422",
    "type": "switch",
    "z": "3987579f.511488",
    "name": "Event Type?",
    "property": "payload.eventType",
    "propertyType": "msg",
    "rules": [
      {
        "t": "eq",
        "v": "ERP",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "ORDER_PROCESSING",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "ITEM_PROCESSING",
        "vt": "str"
      },
      {
        "t": "eq",
        "v": "CUSTOMER_PROCESSING",
        "vt": "str"
      },
      {
        "t": "else"
      }
    ],
    "checkall": "true",
    "outputs": 5,
    "x": 185,
    "y": 282,
    "wires": [
      [
        "1058903c.f0c4"
      ],
      [
        "386bb497.28993c"
      ],
      [],
      [],
      []
    ]
  },
  {
    "id": "1058903c.f0c4",
    "type": "amqp out",
    "z": "3987579f.511488",
    "name": "orderProcessingQ",
    "routingkey": "",
    "iotype": "4",
    "ioname": "s1q",
    "server": "1a870f79.ae0e91",
    "x": 571,
    "y": 88,
    "wires": []
  }
]
